# the first stage of our build will extract the layers
FROM openjdk:8-jre-alpine3.9 as builder
WORKDIR application
ARG JAR_FILE=target/*.jar
COPY ${JAR_FILE} application.jar
#RUN java -Djarmode=layertools -jar application.jar extract

# the second stage of our build will copy the extracted layers
#FROM openjdk:8-jre-alpine3.9
#WORKDIR application
#COPY --from=builder application/dependencies/ ./
#COPY --from=builder application/spring-boot-loader/ ./
#COPY --from=builder application/snapshot-dependencies/ ./
#COPY --from=builder application/application/ ./

#ADD run-service.sh /run-service
#RUN chmod +X /run-service

# Add docker-compose-wait tool --------------------
ENV WAIT_VERSION 2.8.0
ADD https://github.com/ufoscout/docker-compose-wait/releases/download/$WAIT_VERSION/wait /wait
RUN chmod +x /wait

# mount azure fileshare
ENV CREDS=/docker/config/fileshare/ihdastorage.cred

# set the startup command to execute the jar
ENTRYPOINT sh -c 'source ${CREDS} \
  && mkdir -p /mnt/ihdafilesshare | mkdir -p /etc/smbcredentials \
  && echo "username=${username}\npassword=${password}" >> /etc/smbcredentials/${storage}.cred \
  && chmod 600 /etc/smbcredentials/${storage}.cred \
  && echo "//${storage}.file.core.windows.net/${fileshare} /mnt/ihdafilesshare cifs nofail,vers=3.0,credentials=/etc/smbcredentials/${storage}.cred,dir_mode=0777,file_mode=0777,serverino" >> /etc/fstab \
  && mount -t cifs -o username=${username},domain=${domain},password=${password} //${storage}.file.core.windows.net/${fileshare} /mnt/ihdafilesshare \
  && /wait && java -jar application.jar'
  #  && /wait && java org.springframework.boot.loader.JarLauncher'